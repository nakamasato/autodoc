name: dev

on:
  pull_request:
    paths:
      - .github/workflows/dev.yml
      - '**.py'
      - poetry.lock
      - pyporject.toml
  push:
    branches:
      - main

jobs:
  ci:
    # Set up operating system
    runs-on: ubuntu-latest

    # Define job steps
    steps:
      - name: Check-out repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version-file: .python-version

      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v4
        with:
          path: ~/.local  # the path depends on the OS
          key: poetry-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}

      - name: Install poetry
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1
        with:
          version: 1.8.2
          virtualenvs-create: true # true by default
          virtualenvs-in-project: true # false by default
          installer-parallel: true

      - name: Restore cached dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install package
        run: make install

      - name: Lint
        run: make lint

      - name: Test with pytest
        run: make test

      - name: Use Codecov to track coverage
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml   # coverage report

      - name: Build documentation
        run: make docs

      - name: Run against Notion demo page
        env:
          NOTION_INTEGRATION_TOKEN: ${{ secrets.NOTION_INTEGRATION_TOKEN }}
        run: make e2e-notion

  prerelease:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    concurrency: prerelease
    permissions:
      id-token: write
      contents: write

    steps:
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      with:
        fetch-depth: 0

    - name: Python Semantic Release
      uses: python-semantic-release/python-semantic-release@v8.3.0 # fix this version to use Python version 3.12
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        prerelease: "true"
